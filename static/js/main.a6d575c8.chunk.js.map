{"version":3,"sources":["Components/About.js","Components/Employee.js","Components/Admin.js","Components/Footer.js","Components/Header.js","Components/EMap.js","Components/EmployeeMap.js","Components/AMap.js","Components/AdminRTMap.js","Components/TrackMap.js","Components/Track.js","Components/SeeTracks.js","Components/AddEmployee.js","Components/EmpList.js","Components/AdminDashboard.js","App.js","serviceWorker.js","index.js"],"names":["About","EmpLogin","props","obj","event","key","target","name","value","this","console","log","preventDefault","axios","post","then","res","data","document","getElementById","innerText","history","push","pathname","state","userid","catch","err","alert","className","md","label","icon","group","type","validate","error","success","onChange","takeInput","bind","id","style","color","textAlign","textAlignVertical","onClick","handleSubmit","React","Component","AdminLogin","Axios","onSubmit","htmlFor","FooterPage","fluid","href","Date","getFullYear","Header","Map","currentpos","lat","lng","socket","io","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","dt","getDate","getMonth","getHours","getMinutes","getSeconds","emit","getTime","forceUpdate","enableHighAccuracy","getposition","defaultZoom","defaultCenter","center","WrappedMap","withScriptjs","withGoogleMap","EmpMap","location","fontStyle","fontSize","googleMapURL","loadingElement","height","containerElement","mapElement","Amap","ssearr","markings","loc","ssea","sse","EventSource","setState","onmessage","e","JSON","parse","markers","map","mark","onCloseClick","AWrappedMap","AdminRTMap","TMWrappedMap","fakearr","cd","forEach","ltln","length","path","geodesic","options","strokeColor","strokeOpacity","strokeWeight","icons","offset","repeat","Track","dum","us","Seetracks","emplist","emp","elist","element","to","FormPage","eid","eemail","ephone","epassw","eobj","handleAddSubmit","ListEmployee","arr","i","splice","edit","remove","clear","AdminDashboard","active","caret","basic","exact","component","AddEmployee","from","App3","Footer","marginTop","bottom","left","right","Boolean","window","hostname","match","ReactDOM","render","App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6d575c8.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction About(){\r\n\r\n    return(<><br/><h1>About Us..</h1><h2>chill heading</h2><h2>canvas imagery later</h2><h3>cool product</h3><p>and  a  lot  more..<br/><br/><br/><br/><br/><br/></p></>)\r\n}\r\nexport default About;","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport axios from 'axios';\r\nclass  EmpLogin extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.obj={};\r\n    }\r\n\r\n    takeInput(event){\r\n     var key=event.target.name;\r\n     var value=event.target.value;\r\n     this.obj[key]=value;\r\n     }\r\n\r\n    handleSubmit(event) {\r\n        console.log('handlesubmit called');\r\n        event.preventDefault();\r\n        console.log('empdata is : ',this.obj);\r\n\r\n        console.log('axioslogincalled');\r\n        axios.post('https://realtimeloctracker.herokuapp.com/emplogin',this.obj).\r\n        then( (res)=>{ console.log(res);\r\n      if(res.data===\"Invalid\"){\r\n      \r\n      document.getElementById('errmsg').innerText='Incorrect UserId or ReferenceId..Try Again';\r\n      }\r\n      else{\r\n\r\n        this.props.history.push({pathname:'/employeemap',state:{userid:this.obj.userid}});\r\n      }\r\n      }).catch((err)=>{\r\n        alert(\"something went wrong\");\r\n        console.log(err)});\r\n      }\r\n\r\n    render(){\r\n  return (\r\n    <MDBContainer className=\"container\" >\r\n     <br/>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <form>\r\n            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                 \r\n                label=\"Type your UserName\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                onChange={this.takeInput.bind(this)}\r\n                name=\"userid\"\r\n              />\r\n              <MDBInput\r\n                label=\"Enter Reference Id given by your administrator\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                onChange={this.takeInput.bind(this)}\r\n                name=\"password\"\r\n              />\r\n            </div>\r\n            <label id='errmsg' style={{color:'#ed8ea1',textAlign:\"center\",textAlignVertical: \"center\"}}></label>\r\n            <div className=\"text-center\">\r\n              <MDBBtn  onClick={this.handleSubmit.bind(this)}>Login</MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n}\r\n};\r\n\r\nexport default EmpLogin;\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport Axios from \"axios\";\r\n\r\nclass AdminLogin extends React.Component {\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.obj={};\r\n}\r\n\r\ntakeInput(event){\r\n    var key=event.target.name;\r\n    var value=event.target.value;\r\n    this.obj[key]=value;\r\n    }\r\n\r\nhandleSubmit(event) {\r\n        console.log('handlesubmit called');\r\n        event.preventDefault();\r\n        console.log('empdata is : ',this.obj);\r\n\r\n        console.log('axioslogincalled');\r\n        Axios.post('https://realtimeloctracker.herokuapp.com/adminlogin',this.obj).then((res)=>{\r\n           console.log(res);\r\n           if(res.data===\"Invalid Userid or Password\"){\r\n           document.getElementById('errmsg2').innerText='Incorrect UserId or Password..Try Again';\r\n           } \r\n           else{\r\n          this.props.history.push('/admindashboard');\r\n\r\n          //this.props.history.push('/RealTimeLocations');\r\n           }\r\n           }).catch((err)=>console.log(err));\r\n        \r\n          }\r\n\r\nrender(){\r\n  return (\r\n    <MDBContainer>\r\n      <br/>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <form onSubmit={this.handleSubmit.bind(this)} >\r\n            <p className=\"h4 text-center mb-4\">Sign in to your Administrative account</p>\r\n            <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\r\n              Your email\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"defaultFormLoginEmailEx\"\r\n              name=\"userid\"\r\n              className=\"form-control \"\r\n              onChange={this.takeInput.bind(this)}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\r\n              Your password\r\n            </label>\r\n            <input\r\n            \r\n              type=\"password\"\r\n              id=\"defaultFormLoginPasswordEx\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              onChange={this.takeInput.bind(this)}\r\n            />\r\n             <label id='errmsg2' style={{color:'#ed8ea1',textAlign:\"center\",textAlignVertical: \"center\"}}></label>\r\n            <div className=\"text-center mt-4\">\r\n              <MDBBtn color=\"indigo\" type=\"submit\">Go to Admin Dashboard</MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n}\r\n};\r\n\r\nexport default AdminLogin;","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPage = () => {\r\n  return (\r\n    <MDBFooter color=\"special-color-dark\" \r\n    className=\"font-small pt-4 mt-4  footer navbar-fixed-bottom\">\r\n      <MDBContainer fluid className=\"text-center text-md-left\">\r\n        <MDBRow>\r\n          <MDBCol md=\"6\">\r\n            <h5 className=\"title\">Contact Developer</h5>\r\n            <p>\r\n              developed and maintained by @Himank17Gupta for marketplace expertise solutions.\r\n            </p>\r\n          </MDBCol>\r\n          <MDBCol md=\"6\">\r\n            <h5 className=\"title\">Quick Links</h5>\r\n            <ul>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 1</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 2</a>\r\n              </li>\r\n              <li className=\"list-unstyled\">\r\n                <a href=\"#!\">Link 3</a>\r\n              </li>\r\n            </ul>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: <a href='#!'> Github/Himank17Gupta </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default FooterPage;","import React from 'react';\r\nimport { MDBNavbar,MDBNavbarBrand,MDBContainer } from \"mdbreact\";\r\nfunction Header(){\r\n  //style={{ marginTop: '20px' }}\r\n    return(<MDBContainer>\r\n        <MDBNavbar color=\"special-color-dark lighten-4\"  light>\r\n          <MDBContainer>\r\n            <MDBNavbarBrand className=\"white-text\">Employee Tracker Application</MDBNavbarBrand>\r\n          </MDBContainer>\r\n        </MDBNavbar>\r\n  </MDBContainer>)\r\n}\r\nexport default Header;","import React from'react';\r\nimport io from 'socket.io-client';\r\n import {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow ,Polyline} from 'react-google-maps';\r\n class Map extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.currentpos={lat: 28.7041, lng: 77.1025}\r\n      this.socket=io('https://realtimeloctracker.herokuapp.com');\r\n      //socket:io('http://localhost:2002')\r\n      this.userid=props.userid;\r\n    }\r\n//check the dynamicity of getposition login..looks fine iniatially ironically.\r\ngetposition(){\r\nconsole.log('inside getposition');\r\nnavigator.geolocation.getCurrentPosition(position=>{                      //watchposition\r\n   var lat=position.coords.latitude;\r\n   var lng=position.coords.longitude;\r\n   console.log('lat:',lat,\"lng:\",lng);\r\n   this.currentpos= {'lat':lat,'lng':lng};\r\n   console.log('currentpos is :',this.currentpos);\r\n   console.log('b4 socket emit');\r\n   var dt=new Date();\r\n   console.log(dt.getDate()+\" \"+dt.getMonth()+\" \"+dt.getHours()+\":\"+dt.getMinutes()+\":\"+dt.getSeconds());\r\n   this.socket.emit('Coords_update',{'empId':this.userid,'coords':{'ltln':{'lat':lat,'lng':lng},'time':dt.getTime()}});\r\n   console.log('after socket emit');\r\n   this.forceUpdate(); \r\n  },\r\n   err=>{alert(\"Gogle maps can't be loaded\",err)},\r\n   {enableHighAccuracy:true,}\r\n   )\r\n\r\n\r\n}\r\n//idea is to update this.currentpos with each watchposition inside getposition...\r\n//after every updatation socket object will be sent off..\r\n//render method's marker will hold this.currentpos to show current position\r\nrender(){\r\n  console.log('inside render b4 return');\r\n  this.getposition();\r\n  console.log(this.currentpos);\r\n      return(  \r\n <GoogleMap\r\n        defaultZoom={10}\r\n        defaultCenter={this.currentpos}\r\n        center={this.currentpos}\r\n        >\r\n       <Marker \r\n         position={this.currentpos}\r\n        />\r\n </GoogleMap>\r\n     );\r\n  }\r\n}\r\n  const WrappedMap=withScriptjs(withGoogleMap(Map));\r\n  export default WrappedMap;\r\n\r\n\r\n","import React from 'react';\r\nimport WrappedMap from './EMap';\r\nfunction EmpMap(props) {\r\n  var userid= props.location.state.userid;     //useridofloggedinemployee\r\nreturn(\r\n\r\n   //left: signoutbutton\r\n\r\n<div>\r\n   <div style={{textAlign:'center', fontStyle: 'italic',fontSize: '40px'}}>dummy text--Welcome {userid}-- dummy text</div>\r\n   <WrappedMap  \r\n   userid={userid}\r\n   googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places,visualization\"}\r\n   loadingElement= {< div style={{ height: `100%` }} />}\r\n   containerElement= {<div style={{ height: `400px` }} />}\r\n   mapElement= {<div style={{ height: `100%` }} />}\r\n   />\r\n\r\n</div>\r\n)\r\n\r\n}\r\n\r\n\r\n\r\nexport default EmpMap;\r\n\r\n","import React, { useState } from'react';\r\nimport io from 'socket.io-client';\r\nimport {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow ,Polyline} from 'react-google-maps';\r\nimport Axios from 'axios';\r\nclass Amap extends React.Component{\r\n\r\nconstructor(props){\r\nsuper(props);\r\nthis.ssearr=[];\r\nthis.state={\r\n  markings:[],\r\n  loc:null,\r\n  ssea:{},\r\n//this.markings=[{lat: 28.7041, lng: 77.1025},{lat: 29.7041, lng: 77.1025},{lat: 30.7041, lng: 77.1025}];\r\nsse:new EventSource('https://realtimeloctracker.herokuapp.com/SSE'),\r\n//sse:new EventSource('http://localhost:2002/SSE',{withCredentials: true}),\r\n}\r\n}\r\ncomponentDidMount(){\r\n Axios.post('https://realtimeloctracker.herokuapp.com/getLatestCoordforAll',{}).then((res)=>{\r\n        console.log(res.data);\r\n        console.log('state :',this.state);\r\n        this.setState({markings:res.data});\r\n   // this.setState({coords:res.data});\r\n    });\r\n    \r\n//this.state.sse.addEventListener('message',msg=>console.log('sse data :',msg));\r\n\r\nthis.state.sse.onmessage=e=>{console.log('sse:',JSON.parse(e.data));this.ssearr=JSON.parse(e.data);this.setState({...this.state,markings:this.ssearr})}\r\n\r\n}\r\n\r\n//idea is to dynamically recieve marking objects from server update em and re render the map with new marks\r\n//through SSE -->componentDidMount()\r\n\r\n//  //SSE--implementation on server be like : setTimeout( getlatestcoordsforallemps(),3000)-->SSE\r\n\r\n//marker onclick --> infowindow ::userid\r\nrender(){\r\n // this.state.sse.addEventListener('message',msg=>console.log('sse data :',msg));\r\nconsole.log('this.state.loc :',this.state.loc);\r\n    console.log('inside render b4 return');\r\n    console.log('ssearr :',this.ssearr);\r\n    console.log('ssea in state',this.state.ssea);\r\n\r\n   var markers=this.state.markings;\r\n   console.log('markers :',markers);\r\n   return(  \r\n   \r\n   <GoogleMap\r\n   defaultZoom={8}\r\n   defaultCenter={{lat: 28.7041, lng: 77.1025}}\r\n   >\r\n    {markers.map(mark=>(\r\n    <Marker\r\n    position={mark}\r\n    key={mark.lat}\r\n    onClick={()=>this.setState({...this.state,loc:mark})}\r\n    />\r\n     ))} \r\n{console.log('2nd block')}\r\n\r\n{this.state.loc&&\r\n<InfoWindow\r\n//position={{lat: 28.7041, lng: 77.1025}}\r\nposition={this.state.loc}\r\nonCloseClick={()=>this.setState({...this.state,loc:null})}\r\n><div>{this.state.loc.userid}</div>\r\n  </InfoWindow>\r\n}\r\n </GoogleMap>\r\n\r\n);\r\n\r\n}\r\n\r\n}\r\nconst AWrappedMap=withScriptjs(withGoogleMap(Amap));\r\nexport default AWrappedMap;","import React from 'react';\r\nimport AWrappedMap from './AMap';\r\nexport default function AdminRTMap(props) {\r\nreturn(\r\n<div>\r\n    <h3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Real Time Locations for all Registered Employees</h3>\r\n    <AWrappedMap  \r\n   googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places,visualization\"}\r\n   loadingElement= {< div style={{ height: `100%` }} />}\r\n   containerElement= {<div style={{ height: `400px` }} />}\r\n   mapElement= {<div style={{ height: `100%` }} />}\r\n   />\r\n\r\n</div>\r\n)\r\n\r\n}\r\n\r\n","import React from'react';\r\nimport {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow ,Polyline} from 'react-google-maps';\r\nfunction AdminMap(props){\r\n    {console.log('props are :',props )}\r\n\r\n    var fakearr=[];\r\n    var center={};\r\n    props.cd.forEach(obj => fakearr.push(obj.ltln));\r\n    if(fakearr.length==0){\r\n        center={ lat:28.736688,lng:77.112063 };\r\n    }\r\n    else{\r\n        center=fakearr[0];\r\n    }\r\n    console.log('fakearr is :',fakearr);\r\n     return(  \r\n<GoogleMap\r\n       defaultZoom={16}\r\n       defaultCenter={center}\r\n  center={center}\r\n  >\r\n    }\r\n\r\n<Polyline\r\n\r\n//path={[{lat:28.736688,lng:77.112063},{lat:28.736690,lng:77.112065},{lat:28.736696,lng:77.112081},{lat:28.737006,lng:77.113191}]}\r\npath={fakearr}\r\ngeodesic={true}\r\noptions={{\r\n    strokeColor: \"#d4021b\",\r\n    strokeOpacity: 1.0,\r\n    strokeWeight: 3,\r\n    icons: [\r\n        {\r\n            icon: \"lineSymbol\",\r\n            offset: \"0\",\r\n            repeat: \"0\"\r\n        }\r\n    ]\r\n}}\r\n/>\r\n\r\n</GoogleMap>\r\n\r\n    );\r\n }\r\n    \r\n const TMWrappedMap=withScriptjs(withGoogleMap(AdminMap));\r\n export default TMWrappedMap;","import React from 'react';\r\nimport TMWrappedMap from './TrackMap';\r\nimport axios from 'axios';\r\n\r\nexport default class Track extends React.Component{\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.userid= this.props.location.state.dum;\r\n    this.state={coords:[]};\r\n}\r\ncomponentWillMount(){\r\n    console.log(this.userid); \r\n    axios.post('https://realtimeloctracker.herokuapp.com/getCoords',{userid:this.userid}).then((res)=>{\r\n        console.log(res)\r\n    this.setState({coords:res.data});\r\n    });\r\n}\r\ncomponentDidMount(){\r\n    console.log(this.userid); \r\n}\r\nrender(){\r\n   \r\n    return(\r\n    <div>\r\n        <button>refresh</button>\r\n        <TMWrappedMap \r\n        us={this.userid}\r\n        cd={this.state.coords}\r\n        googleMapURL={\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places,visualization\"}\r\n        loadingElement= {< div style={{ height: `100%` }} />}\r\n        containerElement= {<div style={{ height: `400px` }} />}\r\n        mapElement= {<div style={{ height: `100%` }} />}\r\n        />\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n}","import React from 'react';\r\nimport Axios from \"axios\";\r\nimport { BrowserRouter , Route, Link } from \"react-router-dom\";\r\nimport Track from './Track';\r\n\r\nexport default class Seetracks extends React.Component{\r\n\r\nconstructor(props){\r\n    super(props);\r\n    this.state={emplist:[]};\r\n}\r\n\r\ncomponentDidMount(){\r\n    console.log('component did mount called');\r\n    console.log('b4axiosgetemployeelist');\r\n    Axios.post('https://realtimeloctracker.herokuapp.com/getemployeelist',{}).then(emp=>{\r\n        console.log(emp);\r\n        var elist=[];\r\n    emp.data.forEach(element => {\r\n    elist.push(element);        \r\n    });\r\nthis.setState({emplist:elist});    \r\n}\r\n    );\r\n}\r\n\r\nrender(){\r\n    return(<>\r\n    {/* <BrowserRouter> */}\r\n         \r\n         <h2> Choose Emplyoee to Check Route History</h2>\r\n         <ul>\r\n         {\r\n             this.state.emplist.map((emp)=>\r\n             <li>\r\n            <Link to={{\r\n             pathname:'/admindashboard/tracks',state:{dum:emp} }}>{emp}</Link>\r\n          </li>\r\n             )\r\n         }\r\n         </ul>\r\n         {/* <ul>\r\n          <li>\r\n            <Link to={{\r\n             pathname:'/tracks',state:{dum:this.state.emplist[0]} }}>{this.state.emplist[0]}</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={{\r\n             pathname:'/tracks',state:{dum:this.state.emplist[1]} }}>{this.state.emplist[1]}</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={{\r\n             pathname:'/tracks',state:{dum:this.state.emplist[2]} }}>{this.state.emplist[2]}</Link>\r\n          </li>\r\n        </ul> */}\r\n\r\n\r\n{/* //-------------------------------------------------------------------------------// */}\r\n        {/* <div className=\"container\">\r\n      <Route path=\"/tracks\" exact component={Track} />\r\n       </div> */}\r\n       {/* </BrowserRouter> */}\r\n         </>)\r\n}\r\n\r\n}","import React from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBInput } from 'mdbreact';\r\nimport axios from 'axios';\r\n\r\nfunction handleAddSubmit(){\r\nconsole.log('handleaddsubmit called');\r\nlet eid=document.getElementById('e-id').value;\r\nlet eemail=document.getElementById('e-email').value;\r\nlet ephone=document.getElementById('e-phone').value;\r\nlet epassw=document.getElementById('e-passw').value;\r\n\r\nif(eid&&eemail&&ephone&&epassw){\r\nlet eobj={\"userid\":eid,\"password\":epassw,\"email\":eemail,\"phone\":ephone};\r\nconsole.log('eobj is :',eobj);\r\naxios.post('https://realtimeloctracker.herokuapp.com/addemployee',eobj).\r\nthen(res=>{console.log('response is ',res)\r\n          document.getElementById('addInfo').innerText=res.data;\r\n          }).catch(err=>{console.log('some error occured',err)\r\n                       document.getElementById('addInfo').innerText=err;\r\n                        });\r\n}\r\nelse{\r\n    console.log('fill out complete details');\r\n    document.getElementById('addInfo').innerText='fill out complete details';\r\n}\r\n}\r\n\r\nconst FormPage = () => {\r\n  return (\r\n    <MDBContainer  className=\"container\"   >\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <form>\r\n            <p className=\"h5 text-center mb-4\">Fill Employee information</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Employee UserId\"\r\n                id='e-id'\r\n                icon=\"user\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n              />\r\n              <MDBInput\r\n                label=\"Employee email-id\"\r\n                icon=\"envelope\"\r\n                id='e-email'\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n              />\r\n              <MDBInput\r\n                label=\"Employee Contact Number\"\r\n               // icon=\"exclamation-triangle\"\r\n               icon=\"phone\" \r\n               id='e-phone'\r\n               group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n              />\r\n              <MDBInput\r\n                label=\"Employee password/ref. id\"\r\n                icon=\"lock\"\r\n                id='e-passw'\r\n                group\r\n                type=\"password\"\r\n                validate\r\n              />\r\n            </div>\r\n            <h3 id='addInfo'></h3>\r\n            <div className=\"text-center\">\r\n              <MDBBtn color=\"primary\"  onClick={()=>handleAddSubmit()}>Add employee</MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default FormPage;","import React from 'react';\r\nimport Axios from 'axios';\r\n// export default function ListEmployee(){\r\n// return(\r\n// <>\r\n// <h1>Employee List...</h1>\r\n// <ul>\r\n//     <li/>\r\n//     <li/>\r\n//     <li/>\r\n// </ul>\r\n// </>\r\n// )\r\n\r\n// }\r\n\r\nexport default class ListEmployee extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state={emplist:[]};\r\n}\r\n\r\ncomponentDidMount(){\r\n    console.log('component did mount called');\r\n    console.log('b4axiosgetemployeelist');\r\n    Axios.post('https://realtimeloctracker.herokuapp.com/getemployeelist',{}).then(emp=>{\r\n        var elist=[];\r\n    emp.data.forEach(element => {\r\n    elist.push(element);        \r\n    });\r\nthis.setState({emplist:elist});    \r\n}\r\n    );\r\n}\r\n\r\nedit(obj){\r\nconsole.log('edit ',obj);\r\n\r\n}\r\n\r\nremove(obj){\r\nconsole.log('remove ',obj);\r\nAxios.post('https://realtimeloctracker.herokuapp.com/empdelete',{\"userid\":obj}).then(res=>{\r\n    console.log(res.data);\r\n    var arr= this.state.emplist;\r\n    for(var i=0;i<arr.length;i++){\r\n        if(arr[i]==obj){\r\n            arr.splice(i,1)\r\n        }\r\n    }\r\n    this.setState({emplist:arr});\r\n}).catch(err=>{\r\nconsole.log(err);\r\n});\r\n\r\n}\r\n\r\nclear(obj){\r\n    console.log('clear coords called');\r\n}\r\n\r\nrender(){\r\n\r\nreturn(\r\n<div>\r\n<h3> Registered Employees... </h3>\r\n    <ul>\r\n    {\r\nthis.state.emplist.map(obj=>{\r\nreturn(\r\n<li key={obj}>\r\n{obj} &nbsp; &nbsp;\r\n<button  onClick={()=>this.edit(obj)} >edit</button> &nbsp;\r\n<button  onClick={()=>this.remove(obj)} >remove employee</button> &nbsp;\r\n<button  onClick={()=>this.clear(obj)} >clear track history</button>\r\n</li>\r\n)\r\n})\r\n    }\r\n    </ul>\r\n</div>\r\n)\r\n}\r\n\r\n\r\n}","import React from 'react'\r\nimport { BrowserRouter,Route,Switch,Redirect } from 'react-router-dom';\r\nimport { MDBNav, MDBNavItem, MDBNavLink,MDBContainer, MDBDropdown, MDBDropdownItem, MDBDropdownToggle, MDBDropdownMenu } from \"mdbreact\";\r\nimport AdminRTMap from './AdminRTMap';\r\nimport EmployeeCrud from './EmployeeCrud';\r\nimport Seetracks from './SeeTracks';\r\nimport AddEmployee from './AddEmployee';\r\nimport EditEmployee from './EditEmployee';\r\nimport ListEmployee from './EmpList';\r\nimport Track from './Track';\r\nfunction AdminDashboard(props){\r\n\r\n  //props.history.push('/RealTimeLocations');\r\n\r\n  return(\r\n     <BrowserRouter>\r\n    \r\n    \r\n    <MDBNav color=\"stylish-color\" className=\"justify-content-center font-weight-bold py-1 px-1 mb-4\">\r\n     <MDBNavItem>\r\n        <MDBNavLink className=\"white-text\" active to=\"/admindashboard/RealTimeLocations\">Real-time-Locations</MDBNavLink>\r\n      </MDBNavItem>\r\n\r\n      <MDBNavItem>\r\n        <MDBNavLink className=\"white-text\" to=\"/admindashboard/Seetracks\" >See Tracks </MDBNavLink>\r\n      </MDBNavItem>\r\n\r\n      <MDBDropdown >\r\n      <MDBDropdownToggle  className=\"font-weight-bold white-text\"  caret color=\"stylish-color-dark\">\r\n        Employee Operations\r\n      </MDBDropdownToggle>\r\n      <MDBDropdownMenu basic>\r\n      {/* <MDBNavLink className=\"white-text\" to=\"/EmplyoeeCrud\" >\r\n        <MDBDropdownItem>EmployeeCrud</MDBDropdownItem>\r\n      </MDBNavLink> */}\r\n      <MDBNavLink className=\"white-text\" to=\"/admindashboard/AddEmp\" >\r\n        <MDBDropdownItem>Add Employee</MDBDropdownItem>\r\n      </MDBNavLink>  \r\n      {/* <MDBNavLink className=\"white-text\" to=\"/EditEmp\" >\r\n        <MDBDropdownItem>Edit Employee</MDBDropdownItem>\r\n      </MDBNavLink> */}\r\n        <MDBNavLink className=\"white-text\" to=\"/admindashboard/ListEmp\" >\r\n        <MDBDropdownItem>See Employee List</MDBDropdownItem>\r\n      </MDBNavLink>\r\n\r\n      </MDBDropdownMenu>\r\n\r\n      </MDBDropdown> \r\n\r\n\r\n      </MDBNav>\r\n\r\n      {/* <div className=\"container\"> */}\r\n      {/* <h2>Admin Dashboard Section</h2> */}\r\n      \r\n      <Switch>\r\n      <Route path=\"/admindashboard/RealTimeLocations\" exact component={AdminRTMap} />\r\n      {/* <Route path=\"/EmplyoeeCrud\" component={EmployeeCrud} />  */}\r\n      <Route path=\"/admindashboard/Seetracks\" component={Seetracks} />\r\n      <Route path=\"/admindashboard/AddEmp\" component={AddEmployee} />\r\n      {/* <Route path=\"/EditEmp\" component={EditEmployee} /> */}\r\n      <Route path=\"/admindashboard/ListEmp\" component={ListEmployee} />\r\n      <Route path=\"/admindashboard/tracks\" exact component={Track} />\r\n      <Redirect from='*' to='/admindashboard/RealTimeLocations' />\r\n       {/* </div> */}\r\n        {/* admin dashboard --(to do -->render RealTimeLocations default onload) */}\r\n       \r\n     </Switch>\r\n     \r\n </BrowserRouter>\r\n    \r\n    )\r\n}\r\nexport default AdminDashboard;\r\n","import React from \"react\";\nimport { BrowserRouter,Route } from 'react-router-dom';\nimport { MDBNav, MDBNavItem, MDBNavLink,MDBContainer } from \"mdbreact\";\nimport About from \"./Components/About\";\nimport EmpLogin from \"./Components/Employee\";\nimport AdminLogin from \"./Components/Admin\";\nimport FooterPage from \"./Components/Footer\";\nimport Header from \"./Components/Header\";\nimport EmpMap from \"./Components/EmployeeMap\";\nimport AdminDashboard from \"./Components/AdminDashboard\";\nimport AdminRTMap from \"./Components/AdminRTMap\";\nimport Track from \"./Components/Track\";\n\nfunction App3() {\n  return  (\n  <BrowserRouter>\n  <MDBContainer>\n  {/* <Header/> */}\n  \n    <MDBNav  color=\"special-color-dark\" className=\"justify-content-end font-weight-bold py-2 px-2 mb-3\">\n    <MDBNavItem>\n        <h1 className=\"white-text\" > &nbsp;Employee Tracker Application&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h1>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink className=\"white-text\" active to=\"/\">About</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink className=\"white-text\" to=\"/employee\" >Employees</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink className=\"white-text\" to='/admin'>Administration</MDBNavLink>\n      </MDBNavItem>\n     {// <MDBNavItem>\n       // <MDBNavLink disabled to=\"#4\">Disabled</MDBNavLink>\n      //</MDBNavItem>\n     }\n    </MDBNav>\n\n\n    <div className=\"container\">\n      <Route path=\"/\" exact component={About} />\n      <Route path=\"/employee\" component={EmpLogin} />\n      <Route path=\"/admin\" component={AdminLogin} />\n      <Route path=\"/employeemap\" component={EmpMap} />\n      <Route path=\"/admindashboard\" component={AdminDashboard}/>\n      \n    </div>\n\n\n    <FooterPage  position=\"absolute\"\n    marginTop=\"-100px\"\n    bottom=\"0\"\n    left= \"0\"\n    right=\"0\"\n    height=\"100px\"     />\n\n</MDBContainer>\n  \n</BrowserRouter>\n);\n}\n\n\n\nexport default App3;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}